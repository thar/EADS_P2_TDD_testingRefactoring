@startuml
Analizador --> Noticia
Analizador --> NoticiaInterface
Noticia --|> NoticiaInterface

class Analizador {
    -std::list<std::shared_ptr<NoticiaInterface>> noticias
    -std::string ruta
    -std::list<Agrupacion> agrupacionEntidadMasFrecuente
    +Analizador()
    +Analizador(std::string ruta)
    +std::list<std::shared_ptr<NoticiaInterface>> getNoticias() const
    +void setNoticas(std::string ruta)
    +void addNoticia(std::shared_ptr<NoticiaInterface> n)
    +std::list<Agrupacion> getAgrupacionEntidadMasNombrada()
    +std::list<Agrupacion> getAgrupacionTematica()
    +std::string agruparNoticias()
    +std::string agruparNoticiasGeneral()
    +std::string toString() const
    -void addNoticiaToAgrupacionEntidadMasFrecuente(std::shared_ptr<NoticiaInterface> noticia)
    -bool isAgrupacionesAgrupables(Agrupacion& agrupacion1, Agrupacion& agrupacion2) const
}
interface NoticiaInterface {
    +void setTitulo(std::string titulo)
    +void setCuerpo(std::string cuerpo)
    +void setPalabrasReservadas(std::string ruta)
    +void actualizar()
    +std::string getTitulo()const
    +std::string getCuerpo()const
    +std::list<std::string> getEntidades()const
    +std::string getEntidadMasFrecuente() const
    +int getFrecuenciaEntidad(std::string entidad) const
    +std::list<std::string> getPalabrasReservadas()const
    +std::list<std::string> getEntidadesRelevantes()const
    +bool esAgrupable(std::shared_ptr<NoticiaInterface> n)const
    +std::string toString()const
}
class Noticia {
    -std::string titulo
    -std::string cuerpo
    -std::map<std::string, int> entidades
    -std::list<std::string> entidadesRelevantes
    -std::list<std::string> palabrasReservadas
    -std::string entidadMasFrecuente
    +Noticia()
    +Noticia(std::string titulo, std::string cuerpo, std::string ruta)
    +Noticia(std::string rutaNoticias, std::string rutaStopWords)
    +void setTitulo(std::string titulo)
    +void setCuerpo(std::string cuerpo)
    +void setPalabrasReservadas(std::string ruta)
    +void actualizar()
    +std::string getTitulo()const
    +std::string getCuerpo()const
    +std::list<std::string> getEntidades()const
    +std::string getEntidadMasFrecuente() const
    +int getFrecuenciaEntidad(std::string entidad) const
    +std::list<std::string> getPalabrasReservadas()const
    +std::list<std::string> getEntidadesRelevantes()const
    +bool esAgrupable(std::shared_ptr<NoticiaInterface> n)const
    +std::string toString()const
    -void setEntidades()
    -void setMasFrecuente()
    -bool agregarEntidad(std::string nombre)
    -bool esletra(char c) const
}
@enduml